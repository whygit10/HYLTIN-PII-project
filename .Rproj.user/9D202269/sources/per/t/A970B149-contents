---
title: "Cleaning up Crime"
author: "William Hyltin"
date: today
output: html_document
editor: 
  markdown: 
    wrap: sentence
---

# Processing script

### Setup

Load needed packages.\
*Pacman::p_load* makes sure they are installed before auto-loading.\
*tidyverse* for general data processing/cleaning.\
*lubridate* for cleaning/re-coding date fields.\
*skimr* for nice visualization of data.\
*here* to set paths.

```{r}
#install.packages(pacman)
pacman::p_load(tidyverse,lubridate,skimr,here, stringr)
```

# Data loading

```{r}
# path to data
# note the use of the here() package and not absolute paths
data_location <- here::here("data","raw-data","raw-crime-060424.csv")
rawdata <- read.csv(data_location, TRUE)
```

# Check data

First we can look at the codebook, which can be found [here](https://data.austintexas.gov/Public-Safety/Crime-Reports/fdj4-gpfu/about_data).
I will recreate it here as it currently exists, and I will have a copy of the pdf attachment codebook included in the repo as well.
However, please note if this analysis is ever repeated that careful consideration should be taken to ensure field have not been changed, removed, or redefined.

| Field                       | Description                                                                                                  |
|------------------------------|------------------------------------------|
| Incident Number             | Incident report number                                                                                       |
| Highest Offense Description | Description                                                                                                  |
| Highest Offense Code        | Code                                                                                                         |
| Family Violence             | Incident involves family violence? Y = yes, N = no                                                           |
| Occurred Date Time          | Date and time (combined) incident occurred                                                                   |
| Occurred Date               | Date the incident occurred                                                                                   |
| Occurred Time               | Time the incident occurred                                                                                   |
| Report Date Time            | Date and time (combined) incident was reported                                                               |
| Report Date                 | Date the incident was reported                                                                               |
| Report Time                 | Time the incident was reported                                                                               |
| Location Type               | General description of the premise where the incident occurred                                               |
| Address                     | Incident location                                                                                            |
| Zip code                    | Zip code where incident occurred                                                                             |
| Council District            | Austin city council district where the incident occurred                                                     |
| APD Sector                  | APD sector where incident occurred                                                                           |
| APD District                | APD district where incident occurred                                                                         |
| PRA                         | APD police reporting area where incident occurred                                                            |
| Census Tract                | Census tract where incident occurred                                                                         |
| Clearance Status            | How/whether crime was solved (see Clearance lookup)                                                          |
| Clearance Date              | Date crime was solved                                                                                        |
| UCR Category                | Code for the most serious crimes identified by the FBI as part of its Uniform Crime Reporting program        |
| Category Description        | Description for the most serious crimes identified by the FBI as part of its Uniform Crime Reporting program |
| X-coordinate                | X-coordinate where the incident occurred                                                                     |
| Y-coordinate                | Y-coordinate where incident occurred                                                                         |
| Latitude                    | Latitude where incident occurred                                                                             |
| Longitude                   | Longitude where the incident occurred                                                                        |
| Location                    | 3rd party generated spatial column                                                                           |

| Clearance lookup |                      |
|------------------|----------------------|
| C                | Cleared by Arrest    |
| O                | Cleared by Exception |
| N                | Not cleared          |

Several ways of looking at the data

```{r}
dplyr::glimpse(rawdata)
summary(rawdata)
head(rawdata)
skimr::skim(rawdata)
unique(rawdata$Location.Type)
```

# Cleaning

By inspecting the data as done above, we find some problems that need addressing:\

### Dates and Times

We have seven time related fields in this dataset: Occurred.Date.Time, Occurred.Date, Occurred.Time, Report.Date.Time, Report.Date, Report.Time, and Clearance.Date.\
- The Date-Time and Date variables were read in as strings, and the two Time variables were read in as numeric. So that we can treat these variables as actual representations of a point in time, we will need to re-code them into date, time, and date-time values.\
- Many of the variables have missing or empty values where they shouldn't. For example, there are some instances where the Occurred.Date.Time variable is empty, but the Occurred.Date and Occurred.Time values are not.\
- Finally, there are some instances where the time value does not make any sense. Values like 60 or 70 are impossible to occur and somewhat vague, so special consideration should be taken to account for these as well.

```{r}
d1 <- rawdata %>% mutate(
  test = (str_sub(as.character(Occurred.Time), -2, -1)
          %>% as.numeric()),
  Occurred.Date = mdy(Occurred.Date)
  ,Report.Date = mdy(Report.Date)
  ,Occurred.Date.Time = parse_date_time(Occurred.Date.Time,'%m/%d/%Y %I:%M:%S %p')
  ,Report.Date.Time = parse_date_time(Report.Date.Time,'%m/%d/%Y %I:%M:%S %p')
  ,Clearance.Date = mdy(Clearance.Date)
  ) %>% mutate(
    Occurred.Time = if_else(
      is.na(Occurred.Time) | test >= 60, 
      if_else(
        Occurred.Date == Report.Date,
        if_else(
          is.na(Report.Time), 
          2359, Report.Time
          ), 2359
        ), if_else(
          Occurred.Time == 2400, 
          2359, Occurred.Time
          ) 
      ) %>% as.character()
    ) %>% mutate(
      Occurred.Time = paste0('000',Occurred.Time,'00') %>% 
        str_sub(.,-6,-1) %>% 
        parse_time('%H%M%S')
      ,Occurred.Date.Time = if_else(
        is.na(Occurred.Date.Time), 
        ymd_hms(paste(Occurred.Date, Occurred.Time)), Occurred.Date.Time
        )
      ,Report.Time = if_else(
        is.na(Report.Time), 2359, Report.Time) %>%
        as.character() %>% 
        paste0('000',.,'00') %>% 
        str_sub(.,-6,-1) %>% 
        parse_time('%H%M%S')
      ,Report.Date.Time = if_else(
        is.na(Report.Date.Time),
        ymd_hms(paste(Report.Date, Report.Time)), Report.Date.Time
      )
      ) %>% select(-test)
skim(d1)
```

This should address all of the time-based variables. I may come back and update some of this, solely because I made some more analytic decisions regarding the empty values for Occurred.Date.Time. The logic is that if the time is missing, the occurrence would have had to have happened at least before the report time, though if the report occurred on a different day we assume the occurrence would have to be at least by midnight the same day. The number of empties, once the three "Occurred" variables are coalesced where appropriate, are relatively low, so I don't expect this to have significant effect on any results either way.

### Categorical Variables

In the initial looks at the dataset a few columns stand out as potential factor variables.  
 - Family Violence is a mostly complete field, though a minor oddity to it is the existence of a third factor when the codebook says it should only be two.  
 - APD Sector, APD District, and PRA may be the best values to serve as a categorical representation of location, since it has relatively few missing variables. Zip code may also work and be more consumable to the average person, however it does have more missing than the others mentioned. Lastly, X and Y Coordinates, though not naturally categorical, may be able to be used to create categorical groupings considering their completeness.  
 - Location Type is another good categorical variable. There are a lot of categories, but with one like this it may be easy to combine some of them. Empty values are climbing, but still less than 1% of the data.  
 - Highest Offense code has 396 distinct values, which would be far too many for categorical use, but again may be able to be grouped.
 - Clearance Status sounds like a very interesting variable to use, however it is one of the variables with the highest number of empties/missing. Furthermore, it's confounded by Clearance Date, which has fewer (but still a lot of) missing and empty values. This is one that may take some outside research, on what constitutes a "clearance" and what it means in relation to a clearance date.
 - UCR Category and Description also sound like very interesting variables, but are the worst offenders in terms of missing data. This makes sense from info from the codebook, that it is reserved for designation of the most serious crimes by the FBI. In a way this could even mean the null values are also valuable, because they very well may indicate less serious crimes.  
 

```{r}
d2<- d1 %>% 
  mutate(
    Family.Violence = toupper(Family.Violence)
    ,Location.Type = if_else(
      Location.Type == '',
      'Unknown', Location.Type
      )
    ) %>% 
  filter(!is.na(Zip.Code) & !is.na(X.coordinate) & !is.na(Y.coordinate) & PRA != '',Clearance.Status != 9)
skim(d2)
print(count(d2)/count(d1))
```

The categorical variables look good for now. Up until this point little exploration has been done and there may be other re-codes or filters that would be worth including for other variables. Likely once I am further into the analysis I will return to this step to make more adjustments, but the changes I've made should provide a good starting point.

### String Variables

There are a few string variables that may be worth using for the analysis. Some of these I covered in the categorical variables, but for those that have excessive number of unique values a categorical value may not be practical.  
 - Highest Offense Description has hundreds of unique values, but since this is essentially a description of the crimes committed there are likely commonalities that could lead to groupings. I can imagine more variables stemming from this as well, such as if the description contains certain keywords I could create indicator variables based on that presence.
 - Address is essentially another location based variable, and considering the number of them that have been cleaned for that purpose already it seems unlikely to need more. Still, the specificity offered by the address may be insightful, especially if i start drilling down into particular areas that suffer from the most crime. Potentially Doing something like a regular expression to extract a street name would be useful.  
 - Location Type does not have an unreasonable number of unique values, so this variable may better fit as a categorical only. Still the max length of some of the values lends itself to be that there may be more worth extracting from the field.
 
Parsing out these string variables will likely be more of a cognitive load than the others would, so I will hold off on doing so for now. Once I am further along with the EDA I will have a better idea of what I want to be looking for within these variables anyway.

### Tidied Up

All done, data is clean now.

Let's assign at the end to some final variable, this makes it easier to add further cleaning steps above.

```{r}
processeddata <- d2
```

# Save data

Finally, we save the clean data as RDS file.

```{r}
save_data_location <- here::here("data","processed-data","processedcrime.rds")
saveRDS(processeddata, file = save_data_location)
```


```{r Sandbox, echo=FALSE}
#rawdata %>% filter(Occurred.Date.Time == '')

rawdata %>% mutate(
  test = (str_sub(as.character(Occurred.Time), -2, -1)
          %>% as.numeric()),
  Occurred.Date = mdy(Occurred.Date)
  ,Report.Date = mdy(Report.Date)
  ,Occurred.Date.Time = parse_date_time(Occurred.Date.Time,'%m/%d/%Y %I:%M:%S %p')
  ,Report.Date.Time = parse_date_time(Report.Date.Time,'%m/%d/%Y %I:%M:%S %p')
  ,Clearance.Date = mdy(Clearance.Date)
  ) %>% mutate(
    Occurred.Time = if_else(
      is.na(Occurred.Time) | test >= 60, 
      if_else(
        Occurred.Date == Report.Date,
        if_else(
          is.na(Report.Time), 
          2359, Report.Time
          ), 2359
        ), if_else(
          Occurred.Time == 2400, 
          2359, Occurred.Time
          ) 
      ) %>% as.character()
    ) %>% mutate(
      Occurred.Time = paste0('000',Occurred.Time,'00') %>% 
        str_sub(.,-6,-1) %>% 
        parse_time('%H%M%S')
      ) %>% select(-test)
```
